{"version":3,"sources":["keys.js","App.js","index.js"],"names":["module","exports","API_KEY","BASE_URL","api","key","keys","base","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","fetch","then","res","json","result","console","log","name","sys","country","d","date","String","window","Date","slice","dateBuild","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGAAAA,EAAOC,QAAU,CACfC,QAAS,mCACTC,SAAU,6C,iKCCNC,EAAM,CACVC,IAAKC,IAAKJ,QACVK,KAAMD,IAAKH,UAuEEK,MApEf,WACE,IADa,EAOaC,mBAAS,IAPtB,mBAONC,EAPM,KAOCC,EAPD,OAQiBF,mBAAS,IAR1B,mBAQNG,EARM,KAQGC,EARH,KAqBb,OACE,yBACEC,UACyB,oBAAhBF,EAAQG,KACXH,EAAQG,KAAKC,KAAO,GAClB,UACA,WACF,OAGN,8BACE,yBAAKF,UAAU,oBACb,kDAEE,2BACEG,KAAK,OACLC,YAAY,YACZJ,UAAU,aACVK,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOC,QACnCA,MAAOZ,EACPa,WAhCG,SAACH,GACA,UAAVA,EAAEf,KACJmB,MAAM,GAAD,OAAIpB,EAAIG,KAAR,qBAAyBG,EAAzB,+BAAqDN,EAAIC,MAC3DoB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLjB,EAAS,IACTE,EAAWe,GACXC,QAAQC,IAAIF,WA6BU,oBAAhBhB,EAAQG,KACd,6BACE,yBAAKD,UAAU,sBACb,yBAAKA,UAAU,YACZF,EAAQmB,KADX,KACmBnB,EAAQoB,IAAIC,SAE/B,yBAAKnB,UAAU,QAAf,IAlDM,SAACoB,GACjB,IAAIC,EAAOC,OAAO,IAAIC,OAAOC,MAE7B,OADAH,EAAOA,EAAKI,MAAM,EAAG,IAgDaC,CAAU,IAAIF,QAExC,yBAAKxB,UAAU,qBACb,yBAAKA,UAAU,eACZ2B,KAAKC,MAAM9B,EAAQG,KAAKC,MAD3B,SAGA,yBAAKF,UAAU,WAAWF,EAAQA,QAAQ,GAAGG,QAIjD,MChEV4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.11115d1b.chunk.js","sourcesContent":["module.exports = {\r\n  API_KEY: \"4dd59386cb24737bda58add8740170ee\",\r\n  BASE_URL: \"https://api.openweathermap.org/data/2.5/\",\r\n};","import React, { useState } from \"react\";\nimport keys from \"./keys\";\n\nconst api = {\n  key: keys.API_KEY,\n  base: keys.BASE_URL,\n};\n\nfunction App() {\n  const dateBuild = (d) => {\n    let date = String(new window.Date());\n    date = date.slice(3, 15);\n    return date;\n  };\n\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const search = (e) => {\n    if (e.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setQuery(\"\");\n          setWeather(result);\n          console.log(result);\n        });\n    }\n  };\n\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.main.temp > 18\n            ? \"App hot\"\n            : \"App cold\"\n          : \"App\"\n      }\n    >\n      <main>\n        <div className=\"search-container\">\n          <label>\n            Enter City Name:\n            <input\n              type=\"text\"\n              placeholder=\"Search...\"\n              className=\"search-bar\"\n              onChange={(e) => setQuery(e.target.value)}\n              value={query}\n              onKeyPress={search}\n            />\n          </label>\n        </div>\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-container\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n              <div className=\"date\"> {dateBuild(new Date())}</div>\n            </div>\n            <div className=\"weather-container\">\n              <div className=\"temperature\">\n                {Math.round(weather.main.temp)}Â°C\n              </div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}